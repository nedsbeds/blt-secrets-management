- name: Deploy secrets
  hosts: all
  gather_facts: no

  tasks:

    - name: Get the secrets!
      include_vars: "{{secret_vault_location}}"

    - name: Test the templates are valid
      block:
        - name: test templating secrets file
          local_action: template src="{{secret_template_location}}" dest="secrettemp.php"
          check_mode: no
          diff: no
        - name: lint php files
          local_action: command php -l secrettemp.php | grep "No Syntax"
          check_mode: no
          diff: no
      always:
        - name: remove temp php files
          local_action: file state=absent path=secrettemp.php
          check_mode: no
          no_log: True

    - name: Template the secrets file
      template:
        src: "{{secret_template_location}}"
        dest: "{{env_path}}{{secret_location}}"

    - name: Symlink secrets file to update env
      file:
        src: "{{ env_path }}{{ secret_location }}"
        dest: "{{ update_env_path }}{{secret_location}}"
        state: link
      when:
        - update_env_path is defined

    - name: Include secrets on local
      blockinfile:
        path: "{{localsettings_location}}"
        marker: "// {mark} added by ansible (secrets config)"
        mode: 0644
        block: |
          if (file_exists($dir . '/docroot/sites/default/settings/secrets.settings.local')) {
            require $dir . '/docroot/sites/default/settings/secrets.settings.local';
          }
      when:
        - localsettings_location is defined
        - not ansible_check_mode

    - name: Ensure directories exist
      file:
        state: directory
        dest: "{{ (env_path + item) | dirname }}"
      loop: "{{ file_dests }}"

    - name: Ensure update directories exist
      file:
        state: directory
        dest: "{{ (update_env_path + item) | dirname }}"
      loop: "{{ file_dests }}"
      when:
        - update_env_path is defined

    - name: Copy encrypted files
      copy:
        src: "../../../../{{ item.0 }}"
        dest: "{{ env_path }}{{ item.1 }}"
      loop: "{{ file_srcs|zip(file_dests)|list }}"

    - name: Copy encrypted file to update env
      file:
        src: "../../../../{{ item.0 }}"
        dest: "{{ update_env_path }}{{ item.1 }}"
      loop: "{{ file_srcs|zip(file_dests)|list }}"
      when:
        - update_env_path is defined
